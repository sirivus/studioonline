var m = require("../../strict-method"),
    inherits = require("util").inherits,
    Tree = require("../../tree-data");

function wrap(repos, services, publish) {

    function Navigation(id){
        Tree.call(this,id);
        var self = this;

        this._remove = this.remove;
        this.remove = function(nodeId){
            services.isContain(nodeId,function(bool){
                 if(bool){
                 }else{
                     this._remove();
                 }
            })
        }

        this.on("change",function(){
            console.log("change ...")
           self._publishChangeEvent(self.json);
        });

        this.on("remove",function(){
           self._publishChangeEvent(self.json);
        });

        this.on("create",function(){
           self._publishChangeEvent(self.json);
        });
    }

    Navigation.prototype = Object.create(Tree.prototype,{

        _publishChangeEvent:{value:function(update_data){
            publish("Navigation changed",this.id,update_data);
        }}

    })

    Navigation.className = "Navigation";

    return Navigation;
}

module.exports = wrap;